/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  BlindVoting,
  BlindVotingInterface,
} from "../../contracts/BlindVoting";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Yx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Yy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Hx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Hy",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "partyCode",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "partyName",
        type: "string",
      },
    ],
    name: "addParty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ZdashX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ZdashY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "KX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "KY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "MX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "MY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "PX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "PY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "u1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "partyCode",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "partyCode",
        type: "uint256",
      },
    ],
    name: "getVotesForPartyCode",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "u2",
        type: "uint256",
      },
    ],
    name: "requestBlindSign",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signHelper",
    outputs: [
      {
        internalType: "contract BlindSign",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516119a93803806119a983398101604081905261002f91610198565b610038336100cc565b61004c868661011c60201b6105cf1760201c565b85858585858560405161005e9061018b565b958652602086019490945260408501929092526060840152608083015260a082015260c001604051809103906000f08015801561009f573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055506101e2945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405160248101839052604481018290526101669060640160408051601f198184030181529190526020810180516001600160e01b0390811662d81ed360e71b1790915261016a16565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610dec80610bbd83390190565b60008060008060008060c087890312156101b157600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b6109cc806101f16000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fb578063c5c2c8521461010c578063f2fde38b1461011f578063f5ea01061461013257600080fd5b806316a47c6d1461008d5780632b486c93146100a25780634fcd6cf2146100c8578063715018a6146100f3575b600080fd5b6100a061009b3660046107a2565b610145565b005b6100b56100b036600461080a565b610244565b6040519081526020015b60405180910390f35b6001546100db906001600160a01b031681565b6040516001600160a01b0390911681526020016100bf565b6100a06102b8565b6000546001600160a01b03166100db565b6100b561011a36600461080a565b610323565b6100a061012d366004610823565b610350565b6100a0610140366004610869565b610432565b600081815260026020526040902054811461015f57600080fd5b60015460405163015c1afd60e11b8152600481018c9052602481018b9052604481018a9052606481018990526084810188905260a4810187905260c4810186905260e4810185905261010481018490526001600160a01b03909116906302b835fa9061012401602060405180830381865afa1580156101e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102069190610924565b61020f57600080fd5b600081815260036020526040902054610229906001610946565b60009182526003602052604090912055505050505050505050565b60015460405163d931a31560e01b8152600481018390526000916001600160a01b03169063d931a31590602401602060405180830381865afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b2919061096c565b92915050565b6000546001600160a01b031633146103175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610321600061062e565b565b600081815260026020526040812054821461033d57600080fd5b5060009081526003602052604090205490565b6000546001600160a01b031633146103aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030e565b6001600160a01b0381166104265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161030e565b61042f8161062e565b50565b6000546001600160a01b0316331461048c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030e565b600060026000848152602001908152602001600020604051806060016040529081600082015481526020016001820180546104c690610985565b80601f01602080910402602001604051908101604052809291908181526020018280546104f290610985565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b505050918352505060029182015460ff1615156020918201528583528281018581526001604080860182905260008981529484529093208451815590518051949550859491936105959390850192910190610709565b506040918201516002918201805460ff1916911515919091179055600085815260209190915220546105ca906103fe14610696565b505050565b604051602481018390526044810182905261062a9060640160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1662d81ed360e71b1790526106e8565b5050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051811515602482015261042f9060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166332458eed60e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461071590610985565b90600052602060002090601f016020900481019282610737576000855561077d565b82601f1061075057805160ff191683800117855561077d565b8280016001018555821561077d579182015b8281111561077d578251825591602001919060010190610762565b5061078992915061078d565b5090565b5b80821115610789576000815560010161078e565b6000806000806000806000806000806101408b8d0312156107c257600080fd5b505088359a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e081013595506101008101359450610120013592509050565b60006020828403121561081c57600080fd5b5035919050565b60006020828403121561083557600080fd5b81356001600160a01b038116811461084c57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561087c57600080fd5b82359150602083013567ffffffffffffffff8082111561089b57600080fd5b818501915085601f8301126108af57600080fd5b8135818111156108c1576108c1610853565b604051601f8201601f19908116603f011681019083821181831017156108e9576108e9610853565b8160405282815288602084870101111561090257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561093657600080fd5b8151801515811461084c57600080fd5b6000821982111561096757634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561097e57600080fd5b5051919050565b600181811c9082168061099957607f821691505b6020821081036109b957634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c634300080d000a608060405234801561001057600080fd5b50604051610dec380380610dec83398101604081905261002f9161004f565b600095909555600193909355600291909155600355600455600555610099565b60008060008060008060c0878903121561006857600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b610d44806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063817f908211610081578063d931a3151161005b578063d931a315146101a1578063d948fc48146101b4578063eeeac01e146101bd57600080fd5b8063817f908214610187578063997da8d414610190578063c495e5f11461019857600080fd5b80635727dc5c116100b25780635727dc5c1461014f5780637651e178146101575780637a308a4c1461016057600080fd5b806302b835fa146100d957806303a507be146101015780632e52d60614610136575b600080fd5b6100ec6100e7366004610b93565b6101ca565b60405190151581526020015b60405180910390f35b6101287f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179881565b6040519081526020016100f8565b61012870014551231950b75fc4402da1732fc9bebe1981565b610128600781565b61012860055481565b6101287f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b881565b61012860025481565b610128600081565b61012860045481565b6101286101af366004610bf2565b61030b565b61012860035481565b6101286401000003d01981565b60008060006101e48a8a8a8a60006401000003d01961032e565b90925090506000806102008e8e8686856401000003d0196103b6565b909250905060008061021b888b8b846401000003d0196103ea565b809250819350505061027d6040518060400160405280600681526020017f4c48533a2d20000000000000000000000000000000000000000000000000000081525085604051806040016040528060018152602001600160fd1b81525086610424565b6102d76040518060400160405280600681526020017f5248533a2d20000000000000000000000000000000000000000000000000000081525083604051806040016040528060018152602001600160fd1b81525084610424565b81841480156102e557508083145b156102f357600196506102f8565b600096505b5050505050509998505050505050505050565b60008160005461031b9190610c21565b6001546103289190610c40565b92915050565b6000806000806000888b0361037e57858061034b5761034b610c58565b888b0860000361036457600080945094505050506103ab565b6103728b8b60018a8a610488565b91945092509050610397565b61038f8b8b60018c8c60018c61062b565b919450925090505b6103a383838389610963565b945094505050505b965096945050505050565b6000806000806103c78888876109d2565b915091506103d98a8a84848a8a61032e565b935093505050965096945050505050565b60008060008060006104018a8a8a60018b8b6109f7565b92509250925061041383838389610963565b945094505050509550959350505050565b6104828484848460405160240161043e9493929190610cbb565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a0c4b22560e01b179052610a79565b50505050565b6000806000856000036104a2575086915085905084610620565b600084806104b2576104b2610c58565b898a099050600085806104c7576104c7610c58565b898a099050600086806104dc576104dc610c58565b898a099050600087806104f1576104f1610c58565b88806104ff576104ff610c58565b848e0960040990506000888061051757610517610c58565b898061052557610525610c58565b8a8061053357610533610c58565b8586098c098a8061054657610546610c58565b87600309089050888061055b5761055b610c58565b898061056957610569610c58565b838408610576908b610cf8565b8a8061058457610584610c58565b838409089450888061059857610598610c58565b89806105a6576105a6610c58565b8a806105b4576105b4610c58565b8687096008096105c4908b610cf8565b8a806105d2576105d2610c58565b8b806105e0576105e0610c58565b6105ea898e610cf8565b8608840908935088806105ff576105ff610c58565b898061060d5761060d610c58565b8c8e096002099497509295509293505050505b955095509592505050565b600080808915801561063b575088155b1561064d575085915084905083610956565b86158015610659575085155b1561066b575088915087905086610956565b610673610b75565b848061068157610681610c58565b898a098152848061069457610694610c58565b81518a09602082015284806106ab576106ab610c58565b868709604082015284806106c1576106c1610c58565b60408201518709606082015260408051608081019091528086806106e7576106e7610c58565b60408401518e098152602001868061070157610701610c58565b60608401518d098152602001868061071b5761071b610c58565b83518b098152602001868061073257610732610c58565b60208401518a0990526040810151815191925014158061075a57506060810151602082015114155b6107ab5760405162461bcd60e51b815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e7374656164000060448201526064015b60405180910390fd5b6107b3610b75565b85806107c1576107c1610c58565b82516107cd9088610cf8565b604084015108815285806107e3576107e3610c58565b60208301516107f29088610cf8565b6060840151086020820152858061080b5761080b610c58565b815180096040820152858061082257610822610c58565b815160408301510960608201526000868061083f5761083f610c58565b606083015161084e9089610cf8565b888061085c5761085c610c58565b60208501518009089050868061087457610874610c58565b878061088257610882610c58565b888061089057610890610c58565b60408501518651096002096108a59089610cf8565b82089050600087806108b9576108b9610c58565b88806108c7576108c7610c58565b6108d1848b610cf8565b8a806108df576108df610c58565b604087015188510908602085015109905087806108fe576108fe610c58565b888061090c5761090c610c58565b6060850151602087015109610921908a610cf8565b820890506000888061093557610935610c58565b898061094357610943610c58565b8b8f098551099297509095509093505050505b9750975097945050505050565b60008060006109728585610a9a565b90506000848061098457610984610c58565b82830990506000858061099957610999610c58565b828a099050600086806109ae576109ae610c58565b87806109bc576109bc610c58565b8486098a09919a91995090975050505050505050565b60008084836109e18682610cf8565b6109eb9190610d0f565b91509150935093915050565b600080600088600003610a11575086915085905084610a6d565b8860008060015b8315610a64576001841615610a3e57610a368383838f8f8f8e61062b565b919450925090505b610a49600285610d23565b9350610a588c8c8c8c8c610488565b919d509b509950610a18565b91955093509150505b96509650969350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008215801590610aab5750818314155b8015610ab657508115155b610b025760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206e756d62657200000000000000000000000000000000000060448201526064016107a2565b6000600183825b8615610b6a57610b198783610d23565b9050828680610b2a57610b2a610c58565b8780610b3857610b38610c58565b858409610b459089610cf8565b8608909450925086610b578183610c21565b610b619084610cf8565b97509150610b09565b509195945050505050565b60405180608001604052806004906020820280368337509192915050565b60008060008060008060008060006101208a8c031215610bb257600080fd5b505087359960208901359950604089013598606081013598506080810135975060a0810135965060c0810135955060e08101359450610100013592509050565b600060208284031215610c0457600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610c3b57610c3b610c0b565b500290565b60008219821115610c5357610c53610c0b565b500190565b634e487b7160e01b600052601260045260246000fd5b6000815180845260005b81811015610c9457602081850181015186830182015201610c78565b81811115610ca6576000602083870101525b50601f01601f19169290920160200192915050565b608081526000610cce6080830187610c6e565b8560208401528281036040840152610ce68186610c6e565b91505082606083015295945050505050565b600082821015610d0a57610d0a610c0b565b500390565b600082610d1e57610d1e610c58565b500690565b600082610d3257610d32610c58565b50049056fea164736f6c634300080d000a";

type BlindVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlindVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlindVoting__factory extends ContractFactory {
  constructor(...args: BlindVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _x: BigNumberish,
    _r: BigNumberish,
    _Yx: BigNumberish,
    _Yy: BigNumberish,
    _Hx: BigNumberish,
    _Hy: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlindVoting> {
    return super.deploy(
      _x,
      _r,
      _Yx,
      _Yy,
      _Hx,
      _Hy,
      overrides || {}
    ) as Promise<BlindVoting>;
  }
  override getDeployTransaction(
    _x: BigNumberish,
    _r: BigNumberish,
    _Yx: BigNumberish,
    _Yy: BigNumberish,
    _Hx: BigNumberish,
    _Hy: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _x,
      _r,
      _Yx,
      _Yy,
      _Hx,
      _Hy,
      overrides || {}
    );
  }
  override attach(address: string): BlindVoting {
    return super.attach(address) as BlindVoting;
  }
  override connect(signer: Signer): BlindVoting__factory {
    return super.connect(signer) as BlindVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlindVotingInterface {
    return new utils.Interface(_abi) as BlindVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlindVoting {
    return new Contract(address, _abi, signerOrProvider) as BlindVoting;
  }
}
